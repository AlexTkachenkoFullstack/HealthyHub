{"version":3,"file":"static/js/279.9fa3ccb6.chunk.js","mappings":"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","sources":["components/SignInFormValidation/SignInFormValidation.jsx","components/SignUpForm/InputErrorIcon/ErrorIcon.styled.jsx","components/SignUpForm/InputErrorIcon/ErrorIcon.jsx","assets/images/icons/correct.svg","components/SignUpForm/InputSuccessIcon/SuccessIcon.styled.jsx","components/SignUpForm/InputSuccessIcon/SuccessIcon.jsx","pages/SignInPage/SignInPage.styled.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst emailRegexp = '[a-z0-9]+@[a-z]+.[a-z]{2,3}';\nconst letterRegexp = '^(?=.*[a-zA-Z]).*$';;\nconst numberRegexp = '^(?=.*[0-9]).*$';\nconst onlyLatinRegexp = '^[^А-Яа-яЇїІіЄєҐґЁё]+$';\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Example: your@email.com')\n    .label('Email')\n    .max(255)\n    .matches(onlyLatinRegexp, 'Must include only latin letters')\n    .matches(emailRegexp, 'Example: your@email.com')\n    .required('Please enter email'),\n  password: yup\n    .string()\n    .min(6, 'Password must be more than 6 symbols')\n    .max(16, 'Password must be less 16 symbols')\n    .label('Password')\n    .matches(\n      letterRegexp,\n      'Must include at least 1  symbols'\n    )\n    .matches(numberRegexp, 'Must include 1 number or more')\n    .required('Please enter password'),\n});\n\nexport const forgotSchema = yup.object().shape({\n   email: yup\n    .string()\n    .email('Example: your@email.com')\n    .label('Email')\n    .max(255)\n    .matches(onlyLatinRegexp, 'Must include only latin letters')\n    .matches(emailRegexp, 'Example: your@email.com')\n    .required('Please enter email'),\n});","import styled from 'styled-components';\n\nexport const IconContainer = styled.div`\n  display: block;\n  background: transparent;\n  border: none;\n  padding: 0;\n`;\n","import icon from '../../../assets/images/icons/error.svg';\nimport { IconContainer } from './ErrorIcon.styled';\n\nexport default function InputErrorIcon() {\n  return (\n    <IconContainer>\n      <img src={icon} alt=\"Error\" width=\"16\" height=\"16\" />\n    </IconContainer>\n  );\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCorrect(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 8C0 3.58125 3.58125 0 8 0C12.4187 0 16 3.58125 16 8C16 12.4187 12.4187 16 8 16C3.58125 16 0 12.4187 0 8ZM11.6187 6.61875C11.9594 6.27813 11.9594 5.72187 11.6187 5.38125C11.2781 5.04063 10.7219 5.04063 10.3813 5.38125L7 8.7625L5.61875 7.38125C5.27813 7.04063 4.72187 7.04063 4.38125 7.38125C4.04063 7.72187 4.04063 8.27812 4.38125 8.61875L6.38125 10.6187C6.72187 10.9594 7.27813 10.9594 7.61875 10.6187L11.6187 6.61875Z\",\n    fill: \"#3CBC81\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCorrect);\nexport default __webpack_public_path__ + \"static/media/correct.37f002969b1336da5e0fe0040c8e2c93.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const IconContainer = styled.div`\n  display: block;\n  background: transparent;\n  border: none;\n  padding: 0;\n`;\n","import icon from '../../../assets/images/icons/correct.svg';\nimport { IconContainer } from './SuccessIcon.styled';\n\nexport default function InputSuccessIcon() {\n  return (\n    <IconContainer>\n      <img src={icon} alt=\"Success\" width=\"16\" height=\"16\" />\n    </IconContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\nimport SignImImageMobile from \"../../assets/images/sport-and-fitness-tracker-mobile.png\";\nimport SignImImageTablet from \"../../assets/images/sport-and-fitness-tracker-tablet.png\";\nimport SignImImageDesctop from \"../../assets/images/sport-and-fitness-tracker.png\";\n\nimport SignImImageMobile2к from \"../../assets/images/sport-and-fitness-tracker-mobile-2x.png\";\nimport SignImImageTablet2к from \"../../assets/images/sport-and-fitness-tracker-tablet-2x.png\";\nimport SignImImageDesctop2к from \"../../assets/images/sport-and-fitness-tracker-2x.png\";\nimport { Field} from 'formik';\n\n\nexport const ImageSignIn = styled.div`\n@media (min-width: 320px) {\n    background-image: image-set(\n        url(${SignImImageMobile}) 1x,\n        url(${SignImImageMobile2к}) 2x\n    );\n    height: 296px;\n    width: 300px;\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin-left: auto;\n    margin-right: auto;\n    }\n@media (min-width: 834px) {\n    background-image: image-set(\n        url(${SignImImageTablet}) 1x,\n        url(${SignImImageTablet2к}) 2x\n    );\n    height: 376px;\n    width: 380px;\n    }\n@media (min-width: 1440px) {\n    background-image: image-set(\n        url(${SignImImageDesctop}) 1x,\n        url(${SignImImageDesctop2к}) 2x\n    );\n    height: 588px;\n    width: 592px;\n    margin: 0px;\n    padding-bottom: 72p\n}`;\n\nexport const SignInText = styled.div`\n@media (min-width: 320px) {\n    margin-top: 24px;\n}\n@media (min-width: 834px) {\n    margin-top: 60px;\n    text-align: center;\n}\n@media (min-width: 1440px) {\n    margin-top: 0px;\n    display:flex;\n    flex-direction: column;\n    align-items: flex-start;\n}`;\n\nexport const TextTitle = styled.h1`\n@media (min-width: 320px) {\n    font-size: 24px;\n    font-weight:500;\n    line-height: 30px;\n    font-family: 'Poppins';\n}\n@media (min-width: 834px) {\n    font-size: 30px;\n    line-height: 36px;\n}`;\n\nexport const Text = styled.p`\n@media (min-width: 320px) {\n    margin-top: 16px;\n    font-size: 18px;\n    font-weight:400;\n    line-height: 24px;\n    color: var(--text-color-secondary-grey);\n}\n@media (min-width: 834px) {\n    font-size: 22px;\n    line-height: 32px;\n}`;\n\nexport const InputText = styled(Field)`\n@media (min-width: 320px) {\n    background-color: var(--bg-primary);\n    height: 36px;\n    width: 300px;\n    border-radius: 12px;\n    border: 1px solid var(--input-border-color-normal);\n    margin-bottom: 16px;\n    color: var(--text-color-primary-white);\n    padding: 8px 10px;\n    font-size: 14px;\n    font-weight:400;\n    line-height: 20px;\n\n}\n::placeholder {\n    color: var(--text-color-secondary-grey);\n}\n\n&:last-child {\n    margin-bottom: 0; \n}\n@media (min-width: 834px) {\n    width: 380px;\n}\n@media (min-width: 1440px) {\n    width: 212px;\n    margin-bottom: 24px;\n}`;\n\nexport const ButtonSignIn = styled.button`\n@media (min-width: 320px) {\n    height: 36px;\n    width: 300px;\n    border-radius: 12px;\n    background-color: var(--bg-button-color);\n}\n@media (min-width: 834px) {\n    width: 380px;\n}\n@media (min-width: 1440px) {\n    width: 212px;\n}\n`;\n\nexport const FotmSignIn = styled.form`\n@media (min-width: 320px) {\n    margin-top: 24px;\n    background-color: var(--bg-primary);\n    border: none;\n    margin-bottom: 0px;\n    display: flex;\n    align-items: center;\n    flex-direction: column; \n}\n@media (min-width: 1440px) {\n    margin-bottom: 16px;\n    display: flex;\n    align-items: flex-start;\n}`;\n\nexport const TextSecond = styled.p`\n@media (min-width: 320px) {\n    font-size: 14px;\n    font-weight:400;\n    line-height: 20px;\n    color: var(--text-color-button-grey)\n}`;\n\nexport const TextSignUp = styled(NavLink)`\n@media (min-width: 320px) {\n    font-size: 14px;\n    font-weight:500;\n    line-height: 20px;\n    color: var(--text-color-primary-white);\n    margin-top: 16px;\n}\n@media (min-width: 834px) {\n    margin-left: 16px;\n    margin-top: 0px;\n}\n@media (min-width: 1440px) {\n    padding-bottom: 0px;\n    margin-top: 0px;\n}`;\n\nexport const TextBlock = styled.div`\n@media (min-width: 320px) {\n    margin-top: 80px;\n}\n@media (min-width: 834px) {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n    margin-top: 290px;\n}\n@media (min-width: 1440px) {\n    padding-bottom: 0px;\n    margin-top: 196px;\n}`;\n\nexport const SignInContainer = styled.div`\n@media (min-width: 320px) {\n    padding-bottom: 40px;\n    padding-top: 24px;\n}\n@media (min-width: 834px) {\n    padding-bottom: 60px;\n    padding-top: 40px;\n}\n@media (min-width: 1440px) {\n    display:flex;\n    justify-content: space-between;\n    padding-right: 150px;\n    padding-left: 150px;\n    align-items: flex-end;\n}`;\n\nexport const TextFogot = styled(NavLink)`\n@media (min-width: 320px) {\n    font-size: 10px;\n    font-weight:400;\n    line-height: 20px;\n    color: var(--text-color-secondary-grey);\n    margin-bottom: 68px;\n}\n@media (min-width: 834px) {\n    font-size: 14px;\n}\n@media (min-width: 1440px) {\n    margin-bottom: 0px;\n    text-align: center;\n    \n}`;\n\nexport const InputBox = styled.label`\n    background: transparent;\n    position: relative;\n`;\nexport const IconTextPosition = styled.div`\n    position: absolute;\n    top: 35%;\n    right: 10px;\n    transform: translate(-50%, -50%);\n`;\n\nexport const ValidationError = styled.span`\n@media (min-width: 320px) {\n    color: #e74a3b;\n    font-family: Poppins;\n    font-size: 12px;\n    margin-top: -13px;\n    margin-bottom: 14px;\n    font-weight: 400;\n    line-height: 1.17;\n}\n`;\n\nexport const Box = styled.div`\n\n@media (min-width: 1440px) {\n    padding-right: 35px;\n    padding-left: 35px;\n}`;\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Formik, ErrorMessage } from 'formik';\n\nimport InputSuccessIcon from '../../components/SignUpForm/InputSuccessIcon';\nimport InputErrorIcon from '../../components/SignUpForm/InputErrorIcon';\nimport { signInSchema } from '../../components/SignInFormValidation/SignInFormValidation';\nimport {\n    ImageSignIn,\n    SignInText,\n    TextTitle,\n    Text,\n    ButtonSignIn,\n    FotmSignIn,\n    TextSecond,\n    TextSignUp,\n    TextBlock,\n    SignInContainer,\n    TextFogot,\n    IconTextPosition,\n    InputBox,\n    InputText,\n    ValidationError,\n    Box,\n} from './SignInPage.styled';\nimport {loginThunk} from '../../redux/auth/operations'\n\nconst initialValues = {\n    email: '',\n    password: '',\n};\n\nconst SignInPage = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    const formLogin = e.currentTarget;\n    dispatch(loginThunk({ email: formLogin.elements.email.value, password: formLogin.elements.password.value, })\n    );\n    formLogin.reset();\n}\n\n    return (<>\n        <SignInContainer>\n            < ImageSignIn />\n            <SignInText>\n                <TextTitle>Sign in</TextTitle>\n                <Text>You need to login to use the   service</Text>\n                <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={signInSchema}>\n                    {({ errors, touched }) => (\n                        <FotmSignIn onSubmit={handleSubmit}>\n                            <InputBox htmlFor=\"email\">\n                            <InputText\n                                placeholder=\"E-mail\"\n                                label=\"email\"\n                                type='email'\n                                name=\"email\" />\n                            <IconTextPosition>\n                                {errors.email && touched.email ? (\n                                <InputErrorIcon />\n                                ) : (\n                                <InputSuccessIcon />\n                                )}\n                            </IconTextPosition>\n                            </InputBox>\n                                <ErrorMessage name=\"email\">\n                                    {msg => <ValidationError>{msg}</ValidationError>}\n                                </ErrorMessage>\n                            <InputBox htmlFor=\"password\">\n                            <InputText\n                                placeholder=\"Password\"\n                                label=\"password\"\n                                type='password'\n                                name=\"password\" />\n                            <IconTextPosition>\n                                {errors.password && touched.password ? (\n                                <InputErrorIcon />\n                                ) : (\n                                <InputSuccessIcon />\n                                )}\n                            </IconTextPosition>\n                            </InputBox>\n                            <ErrorMessage name=\"password\">\n                                {msg => <ValidationError>{msg}</ValidationError>}\n                            </ErrorMessage>\n                            <ButtonSignIn type='submit'>Sign In</ButtonSignIn>\n                        </FotmSignIn>\n                    )}\n                </Formik>\n                <Box>\n                    <TextFogot to=\"/forgot-password\">Forgot your password?</TextFogot>\n                    </Box>\n                <TextBlock>\n                    <TextSecond>If you don't have an account yet</TextSecond>\n                    <TextSignUp to=\"/signup\">Sign up</TextSignUp>\n                </TextBlock>\n            </SignInText>\n        </SignInContainer>\n            </>\n    )\n}\n\nexport default SignInPage"],"names":["emailRegexp","onlyLatinRegexp","signInSchema","yup","shape","email","label","max","matches","required","password","min","forgotSchema","IconContainer","styled","div","_templateObject","_taggedTemplateLiteral","InputErrorIcon","_jsx","children","src","icon","alt","width","height","InputSuccessIcon","ImageSignIn","SignImImageMobile","SignImImageMobile2к","SignImImageTablet","SignImImageTablet2к","SignImImageDesctop","SignImImageDesctop2к","SignInText","_templateObject2","TextTitle","h1","_templateObject3","Text","p","_templateObject4","InputText","Field","_templateObject5","ButtonSignIn","button","_templateObject6","FotmSignIn","form","_templateObject7","TextSecond","_templateObject8","TextSignUp","NavLink","_templateObject9","TextBlock","_templateObject10","SignInContainer","_templateObject11","TextFogot","_templateObject12","InputBox","_templateObject13","IconTextPosition","_templateObject14","ValidationError","span","_templateObject15","Box","_templateObject16","initialValues","dispatch","useDispatch","handleSubmit","e","preventDefault","formLogin","currentTarget","loginThunk","elements","value","reset","_Fragment","_jsxs","Formik","onSubmit","validationSchema","_ref","errors","touched","htmlFor","placeholder","type","name","ErrorMessage","msg","to"],"sourceRoot":""}