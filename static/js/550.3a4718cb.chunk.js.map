{"version":3,"file":"static/js/550.3a4718cb.chunk.js","mappings":"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","sources":["assets/images/icons/arrow-right.svg","pages/DashboardPage/DashboardPage.styled.jsx","utils/DashBoard/TempData/MonthCaloriesSet.js","utils/DashBoard/avarageValue.js","pages/DashboardPage/Calories/Calories.jsx","utils/DashBoard/TempData/YearWaterSet.js","pages/DashboardPage/Water/Water.jsx","utils/DashBoard/TempData/YearWeightSet.js","pages/DashboardPage/Weight/Weight.jsx","pages/DashboardPage/SelectPeriod/SelectPeriod.styled.jsx","pages/DashboardPage/SelectPeriod/SelectPeriod.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.62012 3.95312L13.6668 7.99979L9.62012 12.0465\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.33301 8H13.553\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.d0c0c26f156afde714dd6305bb874a9a.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Frame = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 834px) {\n    margin-top: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const GraphicsFrame = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 27px;\n  margin-bottom: 27px;\n\n  @media screen and (min-width: 834px) {\n    gap: 40px;\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap:20px;\n  }\n`;\n\nexport const GraficFrame = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GraphicHeader = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n\n  @media screen and (min-width: 834px) {\n    justify-content: left;\n    gap: 40px;\n  }\n`;\n\nexport const GraphicTitle = styled('p')`\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 144.44%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    font-size: 22px;\n    line-height: 145.5%;\n  }\n`;\n\nexport const Avarage = styled('p')`\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 143%;\n  color: var(--text-color-primary-white);\n`;\n\nexport const Value = styled('span')`\n  font-weight: 500;\n  margin-left: 6px;\n`;\n\nexport const GraphicBody = styled('div')`\n  width: 780px;\n  height: 382px;\n  background-color: var(--bg-secondary);\n  border-radius: 12px;\n\n  @media screen and (min-width: 1440px) {\n    width: 676px;\n    height: 382px;\n  }\n`;\n\nexport const WeightBody = styled('div')`\n  width: 1372px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 834px) {\n    width: 1372px;\n    margin-bottom: 60px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1372px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const WeigthFrame = styled('div')`\n  width: 780px;\n  height: 110px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px 24px 36px 24px;\n  border-radius: 12px;\n  background-color: var(--bg-secondary);\n\n  @media screen and (min-width: 1440px) {\n    width: 1372px;\n  }\n`;\n\nexport const WeigthItem = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 400;\n  color: var(--text-color-primary-white);\n`;\n\nexport const WeightData = styled('div')`\n  font-size: 14px;\n  line-height: 143%;\n`;\n\nexport const WeightDate = styled('div')`\n  font-size: 10px;\n  line-height: 140%;\n  color: var(--text-color-secondary-grey);\n`;\n\nexport const CaloriesFrame = styled('div')``;\nexport const WaterFrame = styled('div')``;\n\nexport const ScrollWrap = styled('div')`\n  @media screen and (max-width: 833px) {\n    width: 310px;\n    padding-bottom: 8px;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    scroll-behavior: smooth;\n\n    &::-webkit-scrollbar {\n      height: 8px;\n      width: 94px;\n\n      background-color: var(--bg-secondary);\n      border-radius: 12px;\n    }\n\n    &::-webkit-scrollbar-track {\n      border-radius: 12px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 12px;\n    }\n  }\n`;\n","export const MonthCaloriesSet = [\n  { data: 1683, date: '2023-08-01' },\n  { data: 1716, date: '2023-08-02' },\n  { data: 1640, date: '2023-08-03' },\n  { data: 1633, date: '2023-08-04' },\n  { data: 1700, date: '2023-08-05' },\n  { data: 1634, date: '2023-08-06' },\n  { data: 1695, date: '2023-08-07' },\n  { data: 1682, date: '2023-08-08' },\n  { data: 1725, date: '2023-08-09' },\n  { data: 1678, date: '2023-08-10' },\n  { data: 1606, date: '2023-08-11' },\n  { data: 1654, date: '2023-08-12' },\n  { data: 1622, date: '2023-08-13' },\n  { data: 1691, date: '2023-08-14' },\n  { data: 1641, date: '2023-08-15' },\n  { data: 1734, date: '2023-08-16' },\n  { data: 1674, date: '2023-08-17' },\n  { data: 1615, date: '2023-08-18' },\n  { data: 1655, date: '2023-08-19' },\n  { data: 1738, date: '2023-08-20' },\n  { data: 1706, date: '2023-08-21' },\n  { data: 1730, date: '2023-08-22' },\n  { data: 1618, date: '2023-08-23' },\n  { data: 1650, date: '2023-08-24' },\n  { data: 1615, date: '2023-08-25' },\n  { data: 1649, date: '2023-08-26' },\n  { data: 1726, date: '2023-08-27' },\n  { data: 1631, date: '2023-08-28' },\n  { data: 1650, date: '2023-08-29' },\n  { data: 1624, date: '2023-08-30' },\n  { data: 1700, date: '2023-08-31' },\n];\n","export const avarageValue = data => {\n  const numbers = data.map(({ data }) => data);\n  const quantity = numbers.length;\n  const total = numbers.reduce((prevValue, number) => {\n    return prevValue + number;\n  }, 0);\n\n  const result = total / quantity;\n  if (result > 999) {\n    return result.toFixed(0);\n  }\n  if (result < 999) {\n    return result.toFixed(1);\n  }\n};\n","import { getDate, parseISO } from 'date-fns';\nimport {\n  GraphicHeader,\n  GraphicBody,\n  GraficFrame,\n  ScrollWrap,\n  GraphicTitle,\n  Avarage,\n  Value,\n} from '../DashboardPage.styled';\n// import { YearCaloriesSet } from '../../../utils/DashBoard/TempData/YearCaloriesSet';\nimport { MonthCaloriesSet } from '../../../utils/DashBoard/TempData/MonthCaloriesSet';\nimport { avarageValue } from '../../../utils/DashBoard/avarageValue';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  PointElement,\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, PointElement);\n\nexport const Calories = ({ name, stat }) => {\n  const lables = MonthCaloriesSet.map(({ date }) => getDate(parseISO(date)));\n  console.log(stat)\n\n  const caloriesData = MonthCaloriesSet.map(({ data }) => data);\n\n  const titleTooltip = tooltipItems => {\n    return '';\n  };\n\n  const data = {\n    labels: lables,\n\n    datasets: [\n      {\n        data: caloriesData,\n        tension: 0.1,\n        borderColor: 'rgba(227, 255, 168, 1)',\n        backgroundColor: 'rgba(227, 255, 168, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    // responsive:true,\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false,\n    },\n    layout: {\n      padding: {\n        left: 14,\n        right: 31,\n        top: 25,\n        bottom: 24,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        yAlign: 'false',\n        displayColors: false,\n        callbacks: {\n          title: titleTooltip,\n          afterLabel: function (context) {\n            return 'milliliters';\n          },\n        },\n      },\n    },\n    pointRadius: 0,\n    scales: {\n      y: {\n        color: '#B6B6B6',\n        min: 0,\n        max: 3000,\n        ticks: {\n          padding: 14,\n          stepSize: 1000,\n          callback: value => {\n            if (value !== 0) {\n              return value / 1000 + 'K';\n            }\n            if (value === 0) {\n              return value;\n            }\n          },\n        },\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n      },\n      x: {\n        color: '#B6B6B6',\n        grace: 5,\n        ticks: {\n          padding: 6,\n        },\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n          // offset: true,\n        },\n        min: 0,\n        max: 31,\n      },\n    },\n  };\n\n  return (\n    <>\n      <GraficFrame>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>Avarage value:<Value>{avarageValue(MonthCaloriesSet)} cal</Value>\n        </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <GraphicBody>\n            <Line data={data} options={options}></Line>\n          </GraphicBody>\n        </ScrollWrap>\n      </GraficFrame>\n    </>\n  );\n};\n","export const YearWaterSet = [\n  { data: 1583, date: 'January' },\n  { data: 1516, date: 'February' },\n  { data: 1540, date: 'March' },\n  { data: 1533, date: 'April' },\n  { data: 1500, date: 'May' },\n  { data: 1534, date: 'June' },\n  { data: 1595, date: 'July' },\n  { data: 1582, date: 'August' },\n  { data: 1525, date: 'September' },\n  { data: 1578, date: 'October' },\n  { data: 1506, date: 'November' },\n  { data: 1554, date: 'December' },\n];\n","import {\n  GraphicHeader,\n  GraphicBody,\n  GraficFrame,\n  ScrollWrap,\n  GraphicTitle,\n  Avarage,\n  Value,\n} from '../DashboardPage.styled';\nimport { YearWaterSet } from '../../../utils/DashBoard/TempData/YearWaterSet';\nimport { avarageValue } from 'utils/DashBoard/avarageValue';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n} from 'chart.js';\n\nChartJS.register(\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n);\n\nexport const Water = ({ name }) => {\n  const lables = YearWaterSet.map(({ date }) => {\n    return date.substring(0,3);\n  });\n\n  const waterData = YearWaterSet.map(({ data }) => {\n    return data ;\n  });\n\n  const titleTooltip = tooltipItems => {\n    return '';\n  };\n\n\n  const data = {\n    type: 'line',\n    labels: lables,\n    datasets: [\n      {\n        data: waterData,\n        tension: 0.1,\n        borderColor: 'rgba(227, 255, 168, 1)',\n        spanGaps: true,\n        backgroundColor: 'rgba(227, 255, 168, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n   \n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false,\n    },\n    layout: {\n      padding: {\n        left: 14,\n        right: 31,\n        top: 25,\n        bottom: 24,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n\n      shadowOffsetX: 3,\n      shadowOffsetY: 3,\n      shadowBlur: 10,\n      shadowColor: 'rgba(231, 219, 219, 0.5)',\n      \n        yAlign: false,\n        displayColors: false,\n        cornerRadius: 8,\n        backgroundColor: '#0F0F0F',\n        titleColor: '#FFF',\n        bodyAlign: 'center',\n        footerAlign: 'center',\n        shadow: '0px 4px 14px 0px rgba(227, 255, 168, 0.20)',\n        bodyFont: {\n          size: 32,\n          weight: 'bold',\n          family: 'Poppins',\n          lineHeight: 1.19,\n          style: 'normal',\n        },\n        caretSize:0,\n        footerFont: {\n          size: 14,\n          weight: 'normal',\n          family: 'Poppins',\n          lineHeight: 1.43,\n          style: 'normal',\n        },\n        footerColor:'#B6B6B6',\n        callbacks: {\n          title: titleTooltip,\n          footer: function (context) {\n            return 'milliliters';\n          },\n        },\n      },\n    },\n    pointRadius: 0,\n    scales: {\n      y: {\n        color: '#B6B6B6',\n        min: 0,\n        max: 3000,\n        ticks: {\n          padding: 8,\n          stepSize: 1000,\n          callback: value => {\n            if (value !== 0) {\n              return value / 1000 + 'K';\n            }\n            if (value === 0) {\n              return value;\n            }\n          },\n        },\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n      },\n      x: {\n        stacked: true,\n        beginAtZero: false,\n        color: '#B6B6B6',\n        ticks: {\n          padding: 6,\n        },\n\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n          // offset: true,\n        },\n        min: 0,\n        max: 31,\n      },\n    },\n  };\n\n  return (\n    <>\n      <GraficFrame>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>\n            Avarage value:<Value>{avarageValue(YearWaterSet)} ml</Value>\n          </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <GraphicBody>\n            <Line data={data} options={options}></Line>\n          </GraphicBody>\n        </ScrollWrap>\n      </GraficFrame>\n    </>\n  );\n};\n","export const YearWeightSet = [\n  { data: 60, date: 'January' },\n  { data: 61, date: 'February' },\n  { data: 68, date: 'March' },\n  { data: 65, date: 'April' },\n  { data: 62, date: 'May' },\n  { data: 63, date: 'June' },\n  { data: 64, date: 'July' },\n  { data: 65, date: 'August' },\n  { data: 66, date: 'September' },\n  { data: 64, date: 'October' },\n  { data: 65, date: 'November' },\n  { data: 63, date: 'December' },\n];\n","import { nanoid } from 'nanoid';\nimport { avarageValue } from 'utils/DashBoard/avarageValue';\nimport {\n  WeightBody,\n  WeigthFrame,\n  WeigthItem,\n  ScrollWrap,\n  GraphicHeader,\n  GraphicTitle,\n  Avarage,\n  Value,\n  WeightData,\n  WeightDate,\n} from '../DashboardPage.styled';\n\nimport { YearWeightSet } from '../../../utils/DashBoard/TempData/YearWeightSet';\n\nexport const Weight = ({ name }) => {\n  return (\n    <>\n      <WeightBody>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>\n            Avarage value:<Value>{avarageValue(YearWeightSet)} kg</Value>\n          </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <WeigthFrame>\n            {YearWeightSet.map(({ date, data }) => {\n              return (\n                <WeigthItem key={nanoid()}>\n                  <WeightData>{data}</WeightData>\n                  <WeightDate>{date}</WeightDate>\n                </WeigthItem>\n              );\n            })}\n          </WeigthFrame>\n        </ScrollWrap>\n      </WeightBody>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SelectFrame = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\nexport const SelectAndBackWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  font-family: Poppins;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 125%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    gap: 12px;\n    font-size: 30px;\n    line-height: 120%;\n  }\n`;\n\nexport const DateTitle = styled('p')`\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 138%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    font-size: 18px;\n    line-height: 133%;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { ReactComponent as Arrow } from '../../../assets/images/icons/arrow-right.svg';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport {\n  SelectFrame,\n  SelectAndBackWrapper,\n  DateTitle,\n} from './SelectPeriod.styled';\n\nexport const SelectPeriod = () => {\n  const [toggleSelect, setToggleSelect] = useState({\n    value: 'lastYear',\n    label: 'Last Year',\n  });\n\n  const changeOption = () => {\n    if (toggleSelect.value === 'lastMonth') {\n      setToggleSelect({\n        value: 'lastYear',\n        label: 'Last Year',\n      });\n    }\n    if (toggleSelect.value === 'lastYear') {\n      setToggleSelect({\n        value: 'lastMonth',\n        label: 'Last Month',\n      });\n    }\n    return;\n  };\n  const options = [toggleSelect];\n\n  return (\n    <SelectFrame>\n      <SelectAndBackWrapper>\n        <Link to={'/'}>\n          <Arrow\n            style={{\n              transform: 'rotate(180deg)',\n            }}\n          />\n        </Link>\n        <Select\n          defaultValue={{ value: 'lastMonth', label: 'Last Month' }}\n          onChange={() => changeOption()}\n          menuPosition=\"fixed\"\n          options={options}\n          styles={{\n            control: baseStyles => ({\n              ...baseStyles,\n              backgroundColor: 'rgba(5, 5, 5, 1)',\n              // width: '150px',\n              // height: '36px',\n              border: 'none',\n              placeHolder: 'none',\n            }),\n            indicatorSeparator: () => ({\n              display: 'none',\n            }),\n\n            option: () => ({\n              width: '212px',\n              height: '64px',\n              margin: '0',\n              paddingLeft: '12px',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'relative',\n              borderRadius: '12px',\n              backgroundColor: 'rgba(5, 5, 5, 1)',\n            }),\n            menu: () => ({\n              width: '212px',\n              height: '64px',\n              borderRadius: '12px',\n              boxShadow: '0px 4px 14px 0px rgba(227, 255, 168, 0.20)',\n              cursor: 'pointer',\n              position: 'absolute',\n            }),\n            singleValue: () => ({\n              margin: '0',\n            }),\n            valueContainer: () => ({\n              padding: '0px',\n            }),\n\n            dropdownIndicator: baseStyles => ({\n              color: 'rgba(227, 255, 168, 1)',\n              marginLeft: '12px',\n            }),\n            placeholder: () => ({\n              display: 'none',\n            }),\n            input: () => ({\n              display: 'none',\n              padding: '0px',\n            }),\n          }}\n        />\n      </SelectAndBackWrapper>\n      <DateTitle>Month</DateTitle>\n    </SelectFrame>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Calories } from './Calories/Calories';\n\nimport { Water } from './Water/Water';\nimport { Weight } from './Weight/Weight';\nimport { SelectPeriod } from './SelectPeriod/SelectPeriod';\n// import { GoBackBtn } from './GoBackBtn/GoBackBtn';\n\nimport {\n  Frame,\n  GraphicsFrame,\n  CaloriesFrame,\n  WaterFrame,\n} from './DashboardPage.styled';\nimport { fetchStatistics } from 'redux/statistic/operations';\n\nconst DashboardPage = () => {\n  // const [data, setData] = useState('');\n\n  const statistics = useSelector(state => state.statistics.statistics)\n  \n  console.log(statistics)\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!statistics) {\n      dispatch(fetchStatistics());\n    }\n  },[dispatch, statistics])\n\n  return (\n    <>\n      <Frame>\n        <SelectPeriod />\n        <GraphicsFrame>\n          <CaloriesFrame>\n            <Calories name=\"Calories\"\n              stat={ statistics} />\n          </CaloriesFrame>\n          <WaterFrame>\n            <Water name=\"Water\" />\n          </WaterFrame>\n        </GraphicsFrame>\n        <Weight name=\"Weight\" />\n      </Frame>\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["_path","_path2","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowRight","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","Frame","styled","_templateObject","_taggedTemplateLiteral","GraphicsFrame","_templateObject2","GraficFrame","_templateObject3","GraphicHeader","_templateObject4","GraphicTitle","_templateObject5","Avarage","_templateObject6","Value","_templateObject7","GraphicBody","_templateObject8","WeightBody","_templateObject9","WeigthFrame","_templateObject10","WeigthItem","_templateObject11","WeightData","_templateObject12","WeightDate","_templateObject13","CaloriesFrame","_templateObject14","WaterFrame","_templateObject15","ScrollWrap","_templateObject16","MonthCaloriesSet","data","date","avarageValue","numbers","map","quantity","result","reduce","prevValue","number","toFixed","ChartJS","register","LineElement","CategoryScale","PointElement","Calories","name","stat","lables","_ref2","getDate","parseISO","console","log","labels","datasets","_ref3","tension","borderColor","backgroundColor","borderWidth","options","interaction","mode","axis","intersect","layout","padding","left","right","top","bottom","plugins","legend","display","tooltip","yAlign","displayColors","callbacks","tooltipItems","afterLabel","context","pointRadius","scales","y","color","min","max","ticks","stepSize","callback","value","grid","lineWidth","drawTicks","x","grace","_jsx","_Fragment","children","_jsxs","Line","YearWaterSet","LinearScale","Tooltip","Water","type","substring","spanGaps","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","cornerRadius","titleColor","bodyAlign","footerAlign","shadow","bodyFont","size","weight","family","lineHeight","style","caretSize","footerFont","footerColor","footer","stacked","beginAtZero","YearWeightSet","Weight","nanoid","SelectFrame","SelectAndBackWrapper","DateTitle","SelectPeriod","_useState","useState","label","_useState2","_slicedToArray","toggleSelect","setToggleSelect","Link","to","Arrow","transform","Select","defaultValue","onChange","menuPosition","styles","control","baseStyles","_objectSpread","border","placeHolder","indicatorSeparator","option","margin","paddingLeft","alignItems","position","borderRadius","menu","boxShadow","cursor","singleValue","valueContainer","dropdownIndicator","marginLeft","placeholder","input","statistics","useSelector","state","dispatch","useDispatch","useEffect","fetchStatistics"],"sourceRoot":""}